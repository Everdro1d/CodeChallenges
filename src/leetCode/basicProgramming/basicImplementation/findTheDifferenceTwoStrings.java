/*
 * Given two strings s and t.
 * String t is generated by random shuffling string s and then add one more letter at a random position.
 * Return the letter that was added to t.
 *  - 0 <= s.length <= 1000
 *  - t.length == s.length + 1
 *  - s and t consist of lower-case English letters
 *
 * Ex.
 * s = "abc"
 * t = "bacx"
 * ans => "x"
 */

package leetCode.basicProgramming.basicImplementation;

import java.util.HashSet;
import java.util.Scanner;
import static common.methods.*;

public class findTheDifferenceTwoStrings {
    public static void main(String[] args) {
        String descriptor = "This program returns the difference between two strings." +
                "\nEnter your strings on separate lines: \nEx:\nstring1\nstring2";
        System.out.println(descriptor);
        Scanner sc = new Scanner(System.in);
        String input1 = sc.nextLine();
        String input2 =  sc.nextLine();
        sc.close();
        System.out.println(findTheDifference(input1, input2));
    }

    public static char findTheDifference(String s, String t) {
        // check constraints:
        // (0 <= s.length <= 1000) and (t.length == s.length + 1) and s and t consist of lower-case English letters.
        if ( (s+t).matches("[a-z]") && !( isBetween(s.length(), 0, 1000, true)
                || ( t.length() == s.length() + 1) ) )
        {
            return ' ';
        }

        //create a set to hold characters
        HashSet<Character> set = new HashSet<>();

        for (char c : (s+t).toCharArray()) { // iterate through characters in both strings after concatenation and
                                             // conversion to char array
            if (set.contains(c)) {           // if character is in set
                set.remove(c);               // remove it
            } else {                         // otherwise
                set.add(c);                  // add it
            }
        }

        return set.iterator().next();        //return the only character left in the set
    }
}
